@page
@model todolist.Pages.Todos.IndexModel
@{
    ViewData["Title"] = "Todos";
}

<h1 class="d-inline-flex align-items-end mb-0 column-gap-3">
    <span>Todos</span>
    <a asp-page="/Todos/New" class="btn btn-outline-secondary">
        <i class="bi bi-plus-lg"></i> todo
    </a>
</h1>

<form method="get" class="d-flex align-items-center column-gap-2 row-gap-3 my-3 flex-wrap">
    <span class="ms-2 small text-muted">
        @Model.TotalCount items · @Model.TotalPages pages
    </span>

    <label class="form-label mb-0" for="pageNum">Page:</label>
    <input id="pageNum" type="number" name="pageNum" value="@Model.PageNum" min="1" class="form-control" style="width:90px;" />

    <label class="form-label mb-0" for="pageNum">Page size:</label>
    <input id="pageSize" type="number" name="pageSize" value="@Model.PageSize" min="1" max="50" class="form-control" style="width:90px;" />

    <input type="search" name="search" value="@Model.Search" class="form-control"
         placeholder="Search todos…" style="max-width:220px;" />

    <div class="form-check ms-2">
        <input class="form-check-input" asp-for="ShowCompleted" />
        <label class="form-check-label" asp-for="ShowCompleted">Include completed</label>
    </div>

    <button type="submit" class="btn btn-primary">Refresh</button>
</form>

<div class="my-4 d-flex flex-wrap row-gap-3 column-gap-3">
    @foreach(Todo todo in @Model.Todos)
    {
        @await Html.PartialAsync("~/Pages/Todos/_Card.cshtml", todo)
    }
</div>
