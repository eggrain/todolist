@model todolist.Pages.Planner.PlannerDayCardModel
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpCtx
@{
    string isoDate   = Model.Date.ToString("yyyy-MM-dd");
    string modalId   = $"todoModal-{isoDate}";
    Todo todoModel = new Models.Todo { UserId = Model.UserId, OnDate = Model.Date };
    string returnUrl = HttpCtx.HttpContext!.Request.Path + HttpCtx.HttpContext.Request.QueryString;

    List<Todo> completed = [];
    List<Todo> incompleted = [];

    foreach(Todo todo in Model.Todos.OrderBy(todo => todo.StartTime))
    {
        if (todo.Completed == true)
        {
            completed.Add(todo);
        }
        else
        {
            incompleted.Add(todo);
        }
    }
}

<form method="post" asp-page="/Todos/New" data-todo-form>
    <div class="modal fade" id="@modalId" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">New Todo</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input value="@returnUrl" type="hidden" name="returnUrl" />
                    @await Html.PartialAsync("/Pages/Todos/_Form.cshtml", todoModel)
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</form>

<div class="card text-center w-100 h-100 rounded-0 border" style="min-height: 9rem">
    <div class="card-body">
        <div class="d-flex flex-wrap row-gap-3 justify-content-start column-gap-3 align-items-center pb-1 border-bottom">
            <h5 class="card-title text-start d-flex flex-wrap row-gap-3 align-items-center justify-content-start column-gap-3 mb-0">
                <span class="fs-3 card-text text-primary">@Model.Date.Day</span>

                <span class="fs-4">@Model.Date.ToString("dddd")</span>
            </h5>

            <div class="">
                <button class="btn btn-sm btn-outline-secondary"
                        data-bs-toggle="modal"
                        data-bs-target="#@modalId">
                    <i class="bi bi-plus-lg"></i> todo
                </button>
            </div>
        </div>

        @if(completed.Count != 0)
        {
            <ul class="list-group border border-success rounded-0 mt-2">
            @foreach(Todo todo in completed)
            {
                @await Html.PartialAsync("/Pages/Todos/_ListItem.cshtml", todo)
            }
            </ul>
        }

        <div class="my-2 d-flex flex-wrap column-gap-3 row-gap-3">

            @if(incompleted.Count != 0)
            {
                @foreach(Todo todo in incompleted)
                {
                    @await Html.PartialAsync("~/Pages/Todos/_Card.cshtml", todo)
                }
            }
        </div>

        
    </div>
</div>
